main:
	Move(t0, 6)
	Move(t10, t0 * 4 + 4)
	Call_1(malloc, t10)
	Move(t11, _RV1)
	Move(t1, t11)
	Move([t1], t0)
	Move(t2, 0)
L0:
	CJump(t2 < t0, L1, L2)
L1:
	Move([t1 + 4 + t2 * 4], 0)
	Move(t2, t2 + 1)
	Jump(L0)
L2:
	Move(t3, t1 + 4)
	Move(t4, 0)
	CJump(t4 U< [t3 - 4], L3, outOfBounds)
L3:
	Move(t5, 1)
	CJump(t5 U< [t3 - 4], L4, outOfBounds)
L4:
	Move(t6, 2)
	CJump(t6 U< [t3 - 4], L5, outOfBounds)
L5:
	Move(t7, 3)
	CJump(t7 U< [t3 - 4], L6, outOfBounds)
L6:
	Move(t8, 4)
	CJump(t8 U< [t3 - 4], L7, outOfBounds)
L7:
	Move(t9, 5)
	CJump(t9 U< [t3 - 4], L8, outOfBounds)
L8:
	Move(t12, [t3 + t4 * 4] + [t3 + t5 * 4] + [t3 + t6 * 4] + [t3 + t7 * 4] + [t3 + t8 * 4] + [t3 + t9 * 4])
	Return(t12)
